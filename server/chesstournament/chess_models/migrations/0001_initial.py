# Generated by Django 4.2.2 on 2025-04-30 15:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=256, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("country", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "lichess_username",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("lichess_rating_bullet", models.IntegerField(default=0)),
                ("lichess_rating_blitz", models.IntegerField(default=0)),
                ("lichess_rating_rapid", models.IntegerField(default=0)),
                ("lichess_rating_classical", models.IntegerField(default=0)),
                ("fide_id", models.IntegerField(default=None, null=True, unique=True)),
                ("fide_rating_blitz", models.IntegerField(default=0)),
                ("fide_rating_rapid", models.IntegerField(default=0)),
                ("fide_rating_classical", models.IntegerField(default=0)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-creation_date"],
                "unique_together": {("name", "email")},
            },
        ),
        migrations.CreateModel(
            name="RankingSystemClass",
            fields=[
                (
                    "value",
                    models.CharField(
                        choices=[
                            ("BU", "Buchholz"),
                            ("BC", "Buchholz Cut 1"),
                            ("BA", "Buchholz Average"),
                            ("SB", "Sonneborn-Berger"),
                            ("PS", "Plain Score"),
                            ("WI", "No. Wins"),
                            ("BT", "No. games played with Black"),
                        ],
                        max_length=2,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Referee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("refereeNumber", models.CharField(default=-1, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ("start_date", models.DateField(auto_now_add=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("max_update_time", models.IntegerField(default=43200)),
                ("only_administrative", models.BooleanField(default=False)),
                (
                    "tournament_type",
                    models.CharField(
                        choices=[
                            ("SR", "Round Robin Simple"),
                            ("DR", "Round Robin Doble"),
                            ("DD", "Round Robin Doble (mismo día)"),
                            ("SW", "Sistema Suizo"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "tournament_speed",
                    models.CharField(
                        choices=[
                            ("BU", "Bullet"),
                            ("BL", "Blitz"),
                            ("RA", "Rápido"),
                            ("CL", "Clásico"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "board_type",
                    models.CharField(
                        choices=[("LIC", "lichess"), ("OTB", "over the board")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("win_points", models.FloatField(default=1.0)),
                ("draw_points", models.FloatField(default=0.5)),
                ("lose_points", models.FloatField(default=0.0)),
                ("timeControl", models.CharField(default="15+0", max_length=32)),
                ("number_of_rounds_for_swiss", models.IntegerField(default=0)),
                (
                    "administrativeUser",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TournamentPlayers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_created=True, auto_now_add=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="chess_models.player",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="chess_models.tournament",
                    ),
                ),
            ],
            options={
                "ordering": ["date"],
                "unique_together": {("tournament", "player")},
            },
        ),
        migrations.AddField(
            model_name="tournament",
            name="players",
            field=models.ManyToManyField(
                blank=True,
                through="chess_models.TournamentPlayers",
                to="chess_models.player",
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="rankingList",
            field=models.ManyToManyField(
                blank=True, to="chess_models.rankingsystemclass"
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="referee",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="chess_models.referee",
            ),
        ),
        migrations.CreateModel(
            name="Round",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("finish", models.BooleanField(default=False)),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="chess_models.tournament",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("finished", models.BooleanField(default=False)),
                ("start_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                ("result", models.CharField(default="*", max_length=1)),
                ("rankingOrder", models.IntegerField(default=0)),
                (
                    "black",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="black_games",
                        to="chess_models.player",
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="chess_models.round",
                    ),
                ),
                (
                    "white",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="white_games",
                        to="chess_models.player",
                    ),
                ),
            ],
        ),
    ]
